@using Product.Core.Specs;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Text.Json
@using System.Globalization
@using TingStore.Client.Areas.User.Models.Products
@model Pagination<ProductResponse>;
@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    IReadOnlyList<ProductResponse> productResponsesList = Model.Data ?? new List<ProductResponse>();

    ProductDescription getDescription(string id)
    {
        foreach (var item in productResponsesList)
        {
            if(item.Id == id)
            {
                return JsonSerializer.Deserialize<ProductDescription>(item.Description, new JsonSerializerOptions{PropertyNameCaseInsensitive = true});
            }
        }
        return null;
    }
}

<!-- Title Banner Start -->
<section class="title-banner">
    <div class="container-fluid">
        <div class="banner-wrapper">
            <img src="~/user/assets/media/banner/left-image.png" alt="" class="banner-image1">
            <h1 class="dark-black fw-600">Shop</h1>
            <img src="~/user/assets/media/banner/right-image.png" alt="" class="banner-image2">
        </div>
    </div>
</section>
<!-- Title Banner End -->
<!-- Featured Product Start -->
<section class="featured-product-sec py-40 bg-lightest-gray">
    <div class="container-fluid">
        <div class="shop-grid-topbar-container mb-16">
            <div class="shop-grid-topbar v-2 mb-12 p-0">
                <div class="first-block">
                    <div class="visual-btns v-2">
                        <a href="javascript:;" class="visual-box shop-filter">
                            <img src="assets/media/icons/filter-icon.png" alt="">
                            <span>Filter</span>
                        </a>
                    </div>
                    <div class="results d-xl-block d-none">
                        @{
                            int startIndex = ViewBag.PageIndex * ViewBag.PageSize - ViewBag.PageSize + 1;
                            int endIndex = Model.Data != null && Model.Data.Any() ? startIndex + Model.Data.Count() - 1 : startIndex - 1;
                            int totalItems = ViewBag.TotalItems ?? 0; // Khai báo totalItems ở đây
                        }
                        <p class="dark-gray">Showing @startIndex - @endIndex of @totalItems Results</p>
                    </div>
                </div>

                <div class="last-block v-2">
                    <div class="d-lg-flex d-none align-items-center gap-8">
                        <p class="dark-gray">Sort by:</p>
                        <div class="dropdown">
                            <a href="#" class="dropdown-toggle btn" data-bs-toggle="dropdown" aria-expanded="false">
                                @(ViewBag.Sort == "priceAsc" ? "Price increase" : ViewBag.Sort == "priceDesc" ? "Price decrease" : "Default")                      
                            </a>
                            <div class="dropdown-menu dropdown-menu-end">
                                <a class="dropdown-item" href="@Url.Action("Shop", new { pageIndex = 1, pageSize = ViewBag.PageSize, brandId = ViewBag.BrandId, sort = "", search = ViewBag.Search })">Default</a>
                                <a class="dropdown-item" href="@Url.Action("Shop", new { pageIndex = 1, pageSize = ViewBag.PageSize, brandId = ViewBag.BrandId, sort = "priceDesc", search = ViewBag.Search })">Price decrease</a>
                                <a class="dropdown-item" href="@Url.Action("Shop", new { pageIndex = 1, pageSize = ViewBag.PageSize, brandId = ViewBag.BrandId, sort = "priceAsc", search = ViewBag.Search })">Price increase</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="hr-line mb-sm-12 mb-24"></div>
        </div>

        <!-- Danh sách sản phẩm -->
        <div class="row row-gap-3">
            @if (Model?.Data != null && Model.Data.Any())
            {
                foreach (var product in Model.Data)
                {
                    <div class="col-xxl-2 col-xl-3 col-lg-3 col-md-4">
                        <div class="featured-product-card bg-white br-10">
                            <div class="image-box mb-16">
                                <a asp-area="User" asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">
                                    <img src="@(string.IsNullOrEmpty(product.ProductImage) ? "/images/placeholder.jpg" : product.ProductImage)" class="product-image" alt="@product.Name">
                                </a>
                                <div class="side-icons">
                                    <ul class="list-unstyled">
                                        <li>
                                            <a asp-area="User" asp-controller="Product" asp-action="Details" asp-route-itemid="@product.Id" class="btn" data-bs-toggle="modal" data-bs-target="#productQuickView_@product.Id">
                                                <img src="~/user/assets/media/icons/eye.png" alt="">
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="product-desc">
                                <h6 class="product-title mb-8"><a asp-area="User" asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">@product.Name</a></h6>
                                <div class="text mb-16">
                                    <p class="light-gray">
                                        @(getDescription(product.Id)?.Description ?? "No description available")
                                    </p>
                                </div>
                                <div class="rating-star mb-16 bg-white">
                                    @{
                                        double averageRating = ViewBag.AverageRatings != null && ViewBag.AverageRatings.ContainsKey(product.Id) ? Convert.ToDouble(ViewBag.AverageRatings[product.Id]) : 0.0;
                                        int fullStars = (int)Math.Floor(averageRating);
                                        bool hasHalfStar = (averageRating - fullStars) >= 0.5;
                                        int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                        int reviewCount = ViewBag.ReviewCounts != null && ViewBag.ReviewCounts.ContainsKey(product.Id) ? ViewBag.ReviewCounts[product.Id] : 0;
                                    }
                                    <h5 class="color-sec">
                                        @for (int i = 0; i < fullStars; i++)
                                        {
                                            <span class="text-warning">★</span>
                                        }
                                        @if (hasHalfStar)
                                        {
                                            <span class="text-warning half-star">★</span>
                                        }
                                        @for (int i = 0; i < emptyStars; i++)
                                        {
                                            <span class="text-secondary">★</span>
                                        }
                                        <span class="text-16 fw-400 dark-black">(@reviewCount Reviews)</span>
                                    </h5>
                                    <h6 class="text-center">
                                        <span class="text-decoration-line-through light-gray text-danger">
                                            @((product.Price * 1.2m).ToString("C", new CultureInfo("vi-VN")))
                                        </span>
                                        <br />
                                        @product.Price.ToString("C", new CultureInfo("vi-VN"))
                                    </h6>
                                </div>
                                <button class="cus-btn-2 w-100 add-to-cart-btn"
                                        data-product-id="@product.Id"
                                        data-product-name="@product.Name"
                                        data-price="@product.Price"
                                        data-image="@product.ProductImage">
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                    <!-- Modal giữ nguyên -->
                }
            }
            else
            {
                <p>No products found.</p>
            }
        </div>

        <!-- Phân trang -->
        <div class="pagination pt-40">
            <ul id="border-pagination">
                @{
                    var pageSize = ViewBag.PageSize ?? 10;
                    var currentPage = ViewBag.PageIndex ?? 1;
                    var totalPages = ViewBag.TotalPages ?? 1;

                    int maxPagesToShow = 5;
                    int startPage = Math.Max(1, currentPage - maxPagesToShow / 2);
                    int endPage = Math.Min(totalPages, startPage + maxPagesToShow - 1);

                    if (endPage == totalPages)
                    {
                        startPage = Math.Max(1, endPage - maxPagesToShow + 1);
                    }

                    if (currentPage > 1)
                    {
                        <li>
                            <a asp-area="User"
                               asp-controller="Product"
                               asp-action="Shop"
                               asp-route-pageIndex="@(currentPage - 1)"
                               asp-route-pageSize="@pageSize"
                               asp-route-brandId="@ViewBag.BrandId"
                               asp-route-sort="@ViewBag.Sort"
                               asp-route-search="@ViewBag.Search">Previous</a>
                        </li>
                    }

                    if (startPage > 1)
                    {
                        <li>
                            <a asp-area="User"
                               asp-controller="Product"
                               asp-action="Shop"
                               asp-route-pageIndex="1"
                               asp-route-pageSize="@pageSize"
                               asp-route-brandId="@ViewBag.BrandId"
                               asp-route-sort="@ViewBag.Sort"
                               asp-route-search="@ViewBag.Search">1</a>
                        </li>
                        if (startPage > 2)
                        {
                            <li><span>...</span></li>
                        }
                    }

                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li>
                            <a asp-area="User"
                               asp-controller="Product"
                               asp-action="Shop"
                               asp-route-pageIndex="@i"
                               asp-route-pageSize="@pageSize"
                               asp-route-brandId="@ViewBag.BrandId"
                               asp-route-sort="@ViewBag.Sort"
                               asp-route-search="@ViewBag.Search"
                               class="@(i == currentPage ? "active" : "")">@i</a>
                        </li>
                    }

                    if (endPage < totalPages)
                    {
                        if (endPage < totalPages - 1)
                        {
                            <li><span>...</span></li>
                        }
                        <li>
                            <a asp-area="User"
                               asp-controller="Product"
                               asp-action="Shop"
                               asp-route-pageIndex="@totalPages"
                               asp-route-pageSize="@pageSize"
                               asp-route-brandId="@ViewBag.BrandId"
                               asp-route-sort="@ViewBag.Sort"
                               asp-route-search="@ViewBag.Search">@totalPages</a>
                        </li>
                    }

                    if (currentPage < totalPages)
                    {
                        <li>
                            <a asp-area="User"
                               asp-controller="Product"
                               asp-action="Shop"
                               asp-route-pageIndex="@(currentPage + 1)"
                               asp-route-pageSize="@pageSize"
                               asp-route-brandId="@ViewBag.BrandId"
                               asp-route-sort="@ViewBag.Sort"
                               asp-route-search="@ViewBag.Search">Next</a>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</section>
<!-- Featured Product End -->


<!-- Filter Sidebar -->
<div class="sidebar toggle-sidebar bg-white">
    
    <div class="category-block box-1 mb-24">

    </div>
    <div class="category-block box-5 mb-24">
        <div class="title mb-24" data-count="5">
            <h6>Filter By Storage</h6>
            <span>
                <i class="far fa-horizontal-rule"></i>
            </span>
        </div>
        <div class="content-block">
            <form asp-action="FilterByCategory" asp-controller="Product" method="post">
                @foreach(var item in ViewBag.categoryList) {
                    <input type="radio" id="@item" name="CategoryName" value="@item">
                    <label for="@item">@item</label><br>
                }

                <button type="submit" class="">Search</button>
            </form>
        </div>
    </div>
</div>
<div class="overlay"></div>
<!-- Filter Sidebar -->
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('.add-to-cart-btn').on('click', function (e) {
                e.preventDefault();

                var button = $(this);
                var productId = button.data('product-id');
                var productName = button.data('product-name');
                var price = button.data('price');
                var productImage = button.data('image');

                var cartItem = {
                    ProductId: productId,
                    ProductName: productName,
                    Price: price,
                    ProductImage: productImage,
                    Quantity: 1 // Default quantity is 1
                };

                $.ajax({
                    url: '/User/Product/AddCart', // URL to AddCart action
                    type: 'POST',
                    data: JSON.stringify(cartItem),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: "success",
                                title: "Success!",
                                text: "The product has been added to your cart!",
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload(); // Reload the entire page
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Failed!",
                                text: "Could not add the product to the cart!"
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error: ' + error);
                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            text: "An error occurred while adding to the cart. Please try again!"
                        });
                    }
                });
            });

        });
    </script>
}

